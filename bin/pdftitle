#!/bin/bash
# -*- coding:utf-8 -*-
# author: David.Villa@uclm.es

function get_title() {
	pdf=$1
	retval=""

	data=$(mktemp)
	titlelabel="InfoKey: Title"

	pdftk $pdf dump_data > $data
	grep "$titlelabel" $data > /dev/null
	if [ $? -eq 0 ]; then
		found=0
		while read line
		do
			if [ $found -eq 1 ]; then
				retval=${line#*:}
				break
			fi
			if [ "$line" = "$titlelabel" ]; then
				found=1
			fi
		done < $data
	fi
	echo $retval
}

function set_title() {
	pdf=$1
	title=$2

	tmp=$(mktemp)
	metadata=$(mktemp)

#	echo "pdf:" $pdf
#	echo "tmp:" $tmp
#	echo "meta:" $metadata

	mv $pdf $tmp

	cat > $metadata <<EOF
-*- coding:utf-8 -*-
InfoKey: Title
InfoValue: $title
InfoKey: Creator
InfoValue:
InfoKey: Producer
InfoValue:
InfoKey: ModDate
InfoValue:
EOF

	pdftk $tmp update_info $metadata output $pdf
	echo \'$oldtitle\' "->" \'$newtitle\'
}


if [ $# -eq 0 ]; then
	echo "Usage: $0 [ --gui] file [newtitle]"
	exit 1
fi

use_gui=0
opts=$(getopt -o: -l gui -- "$@")
eval set -- "$opts"
while [ 1 ] ; do
	case $1 in
		--gui) use_gui=1 ; shift ;;
		--) shift ; break ;;
		*) echo "Internal error!" ; exit 1 ;;
	esac
done

pdf=$1
newtitle=$2

if [ ! -e $pdf ]; then
	echo \'$pdf\' does not exists >&2
	exit 1
fi

oldtitle=$(get_title $pdf)

if [ -n "$newtitle" ]; then
	set_title $pdf "$newtitle"
	exit 0
fi

if [ $use_gui -eq 1 ]; then
	newtitle=$(zenity --entry \
		--width=400 \
		--title="PDF title" \
		--text="Enter new PDF title:" \
		--entry-text "$oldtitle")

	if [ $? != 0 ]; then
		echo "no changes"
		exit 0
	fi

	set_title $pdf "$newtitle"
else
	echo $oldtitle
fi
