#!/bin/bash
# author: Francisco.Moya@uclm.es

krb5_conf() {
    /bin/cat <<EOF
[logging]
	default = FILE10000:/var/log/krb5lib.log

[libdefaults]
	default_realm = UCLM.ES
	krb4_config = /etc/krb.conf
	krb4_realms = /etc/krb.realms
	kdc_timesync = 1
	ccache_type = 4
	forwardable = true
	proxiable = true
	v4_instance_resolve = false
	v4_name_convert = {
		host = {
			rcmd = host
			ftp = ftp
		}
		plain = {
			something = something-else
		}
	}
	fcc-mit-ticketflags = true

[realms]
	UCLM.ES = {
		kdc = alarcos.uclm.es
		admin_server = alarcos.uclm.es
	}
	ATHENA.MIT.EDU = {
		kdc = kerberos.mit.edu:88
		kdc = kerberos-1.mit.edu:88
		kdc = kerberos-2.mit.edu:88
		admin_server = kerberos.mit.edu
		default_domain = mit.edu
	}
	MEDIA-LAB.MIT.EDU = {
		kdc = kerberos.media.mit.edu
		admin_server = kerberos.media.mit.edu
	}
	ZONE.MIT.EDU = {
		kdc = casio.mit.edu
		kdc = seiko.mit.edu
		admin_server = casio.mit.edu
	}
	MOOF.MIT.EDU = {
		kdc = three-headed-dogcow.mit.edu:88
		kdc = three-headed-dogcow-1.mit.edu:88
		admin_server = three-headed-dogcow.mit.edu
	}
	CSAIL.MIT.EDU = {
		kdc = kerberos-1.csail.mit.edu
		kdc = kerberos-2.csail.mit.edu
		admin_server = kerberos.csail.mit.edu
		default_domain = csail.mit.edu
		krb524_server = krb524.csail.mit.edu
	}
	IHTFP.ORG = {
		kdc = kerberos.ihtfp.org
		admin_server = kerberos.ihtfp.org
	}
	GNU.ORG = {
		kdc = kerberos.gnu.org
		kdc = kerberos-2.gnu.org
		kdc = kerberos-3.gnu.org
		admin_server = kerberos.gnu.org
	}
	1TS.ORG = {
		kdc = kerberos.1ts.org
		admin_server = kerberos.1ts.org
	}
	GRATUITOUS.ORG = {
		kdc = kerberos.gratuitous.org
		admin_server = kerberos.gratuitous.org
	}
	DOOMCOM.ORG = {
		kdc = kerberos.doomcom.org
		admin_server = kerberos.doomcom.org
	}
	ANDREW.CMU.EDU = {
		kdc = vice28.fs.andrew.cmu.edu
		kdc = vice2.fs.andrew.cmu.edu
		kdc = vice11.fs.andrew.cmu.edu
		kdc = vice12.fs.andrew.cmu.edu
		admin_server = vice28.fs.andrew.cmu.edu
		default_domain = andrew.cmu.edu
	}
	CS.CMU.EDU = {
		kdc = kerberos.cs.cmu.edu
		kdc = kerberos-2.srv.cs.cmu.edu
		admin_server = kerberos.cs.cmu.edu
	}
	DEMENTIA.ORG = {
		kdc = kerberos.dementia.org
		kdc = kerberos2.dementia.org
		admin_server = kerberos.dementia.org
	}
	stanford.edu = {
		kdc = krb5auth1.stanford.edu
		kdc = krb5auth2.stanford.edu
		kdc = krb5auth3.stanford.edu
		admin_server = krb5-admin.stanford.edu
		default_domain = stanford.edu
	}

[domain_realm]
	.mit.edu = ATHENA.MIT.EDU
	mit.edu = ATHENA.MIT.EDU
	.media.mit.edu = MEDIA-LAB.MIT.EDU
	media.mit.edu = MEDIA-LAB.MIT.EDU
	.csail.mit.edu = CSAIL.MIT.EDU
	csail.mit.edu = CSAIL.MIT.EDU
	.whoi.edu = ATHENA.MIT.EDU
	whoi.edu = ATHENA.MIT.EDU
	.stanford.edu = stanford.edu
	.uclm.es = UCLM.ES

[login]
	krb4_convert = true
	krb4_get_tickets = false
EOF
}

cacert_pem() {
    /bin/cat <<EOF
-----BEGIN CERTIFICATE-----
MIIEQjCCA6ugAwIBAgIEBAAD+zANBgkqhkiG9w0BAQUFADB1MQswCQYDVQQGEwJV
UzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMScwJQYDVQQLEx5HVEUgQ3liZXJU
cnVzdCBTb2x1dGlvbnMsIEluYy4xIzAhBgNVBAMTGkdURSBDeWJlclRydXN0IEds
b2JhbCBSb290MB4XDTA2MDMxNDIwMzAwMFoXDTEzMDMxNDIzNTkwMFowXzELMAkG
A1UEBhMCQkUxEzARBgNVBAoTCkN5YmVydHJ1c3QxFzAVBgNVBAsTDkVkdWNhdGlv
bmFsIENBMSIwIAYDVQQDExlDeWJlcnRydXN0IEVkdWNhdGlvbmFsIENBMIIBIjAN
BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlSKhEB1KRmBuBZGb34PC7RKyWnz4
q+H4UFwoLH5+ADiTsItK8cJMPBAsPO+w7KFpL7n8zAgUa41PGPOD0vqpNwggqlyq
gGCi1aUiAM9a5bSX37oevlyOFxlm/a+ffHuJsg4k2MerY8SVMo1I5mNZfQS4M6i9
111kvGO1900o/fkGcjFcukWUZaPStFjsO2FYRKMvYrObgLSC/dXHzFEl5ZU/Ry8w
e6zIeG7i4W0n6z3MAYLoNXeNq1i7VdHVpIFWjRzQFLGwBt6gkSLz8Kg0F0fG4D72
DFqsflBLzeFpbgb8Bn5qTbSVmaBZXDVm7NlJ1BfgYLBdpdca4ipuZvKvHQIDAQAB
o4IBbzCCAWswRQYDVR0fBD4wPDA6oDigNoY0aHR0cDovL3d3dy5wdWJsaWMtdHJ1
c3QuY29tL2NnaS1iaW4vQ1JMLzIwMTgvY2RwLmNybDAdBgNVHQ4EFgQUZWWjPdc7
EaMKByU3yUJKW3Z3UOEwUwYDVR0gBEwwSjBIBgkrBgEEAbE+AQAwOzA5BggrBgEF
BQcCARYtaHR0cDovL3d3dy5wdWJsaWMtdHJ1c3QuY29tL0NQUy9PbW5pUm9vdC5o
dG1sMIGJBgNVHSMEgYEwf6F5pHcwdTELMAkGA1UEBhMCVVMxGDAWBgNVBAoTD0dU
RSBDb3Jwb3JhdGlvbjEnMCUGA1UECxMeR1RFIEN5YmVyVHJ1c3QgU29sdXRpb25z
LCBJbmMuMSMwIQYDVQQDExpHVEUgQ3liZXJUcnVzdCBHbG9iYWwgUm9vdIICAaUw
DgYDVR0PAQH/BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwDQYJKoZIhvcNAQEF
BQADgYEAQ7NFg1RxxB/csjxrTr8m8k7yrZpb+oY3iOgUbEEYQl/vZT7rA3egt551
elF8uxVbuK+RoDSSU+1/KkmErLmAS7XHsiMi++vY+27JPPPS0bu+yRz/bQHbaYAO
maXqnnuXmI+3zyKcs7hd5akzF3TGlzcPtOkmgl9hCz8ePWTpK5s=
-----END CERTIFICATE-----

EOF
}

ldap_conf() {
    /bin/cat <<EOF
uri	ldaps://arco.esi.uclm.es
base	dc=arco,dc=esi,dc=uclm,dc=es
tls_cacert	/etc/ldap/sureserverEDU.pem
tls_checkpeer   no
timelimit	10
bind_timelimit	5
ssl		yes
use_sasl	no
rootuse_sasl	no
bind_policy	soft
idle_timelimit	3600
pam_min_uid	1000
sasl_secprops	maxssf=0
EOF
}

nss_ldap_conf() {
    ldap_conf
    /bin/cat <<EOF
nss_paged_results	yes
nss_base_passwd		ou=People,dc=arco,dc=esi,dc=uclm,dc=es?one
nss_base_shadow		ou=People,dc=arco,dc=esi,dc=uclm,dc=es?one
nss_base_group		ou=Group,dc=arco,dc=esi,dc=uclm,dc=es?one
EOF
}


pam_ldap_conf() {
    ldap_conf
    /bin/cat <<EOF
pam_password crypt
EOF
}

remote_nssswitch_conf() {
    /bin/cat <<EOF
passwd:         files db [NOTFOUND=continue] ldap
group:          files db [NOTFOUND=continue] ldap
shadow:         files ldap
hosts:		dns files
networks:       files
protocols:      files
services:       files
ethers:         files
rpc:            files
EOF
}

remote_pam_auth() {
    /bin/cat <<EOF
auth [success=done default=ignore] pam_unix.so nullok_secure try_first_pass
auth [authinfo_unavail=ignore success=2 default=ignore] pam_krb5.so use_first_pass minimum_uid=5000
auth [authinfo_unavail=ignore success=1 default=2] pam_ldap.so use_first_pass
auth [default=done] pam_ccreds.so action=validate use_first_pass
auth [default=done] pam_ccreds.so action=store
auth [default=bad] pam_ccreds.so action=update
EOF
}

remote_pam_passwd() {
    /bin/cat <<EOF
password [success=1 default=ignore]  pam_krb5.so minimum_uid=5000
password required pam_unix.so nullok obscure md5
password required pam_permit.so
EOF
}

remote_pam_session() {
    /bin/cat <<EOF
session optional pam_krb5.so minimum_uid=5000
session required pam_unix.so
session required pam_mkhomedir.so skel=/etc/skel/ umask=0022
EOF
}

remote_pam_account() {
    /bin/cat <<EOF
account required pam_permit.so
EOF
}

remote_pam_screensaver() {
    /bin/cat <<EOF
auth [success=done default=ignore] pam_unix.so nullok_secure try_first_pass
auth [authinfo_unavail=ignore success=done default=ignore] pam_krb5.so use_first_pass minimum_uid=5000
auth required pam_ldap.so use_first_pass
EOF
}

local_nssswitch_conf() {
    /bin/cat <<EOF
passwd:         compat
group:          compat
shadow:         compat
hosts:		dns files
networks:       files
protocols:      files
services:       files
ethers:         files
rpc:            files
EOF
}

local_pam_auth() {
    /bin/cat <<EOF
auth required pam_unix.so nullok_secure try_first_pass
EOF
}

local_pam_passwd() {
    /bin/cat <<EOF
password required pam_unix.so nullok obscure md5
EOF
}

local_pam_session() {
    /bin/cat <<EOF
session required pam_unix.so
EOF
}

local_pam_account() {
    /bin/cat <<EOF
account required pam_unix.so
EOF
}

local_pam_screensaver() {
    /bin/cat <<EOF
@include common-auth
EOF
}

remote_cron_daily() {
    /bin/cat > /etc/cron.daily/ccred <<EOF
#!/bin/sh
/usr/sbin/nss_updatedb ldap passwd
/usr/sbin/nss_updatedb ldap group
EOF
    /bin/chmod a+x /etc/cron.daily/ccred
}

activate() {
    /bin/mkdir -p /etc/ldap
    krb5_conf > /etc/krb5.conf
    cacert_pem > /etc/ldap/sureserverEDU.pem
    ldap_conf > /etc/ldap/ldap.conf
    nss_ldap_conf > /etc/libnss-ldap.conf
    pam_ldap_conf > /etc/pam_ldap.conf
    if test "x$1" = "xremote" ; then
	remote_nssswitch_conf > /etc/nsswitch.conf
	remote_pam_auth > /etc/pam.d/common-auth
	remote_pam_passwd > /etc/pam.d/common-password
	remote_pam_session > /etc/pam.d/common-session
	remote_pam_account > /etc/pam.d/common-account
	for i in /etc/pam.d/*screensaver ; do
	    remote_pam_screensaver > "$i"
	done
	/usr/sbin/nss_updatedb ldap passwd
	/usr/sbin/nss_updatedb ldap group
	remote_cron_daily
    elif test "x$1" = "xlocal" ; then
	local_nssswitch_conf > /etc/nsswitch.conf
	local_pam_auth > /etc/pam.d/common-auth
	local_pam_passwd > /etc/pam.d/common-password
	local_pam_session > /etc/pam.d/common-session
	local_pam_account > /etc/pam.d/common-account
	for i in /etc/pam.d/*screensaver ; do
	    local_pam_screensaver > "$i"
	done
	/bin/rm -f /etc/cron.daily/ccred
    else
	echo "Unknown mode $1"
    fi
}

umask 022

if test $# -lt 1 ; then
    cat <<EOF
Usage: $(basename $0) [remote|local]
Configures the system for remote/local authentication.

EOF
    exit 0
fi

apt-get install libnss-ldap libnss-db nss-updatedb libpam-modules libpam-krb5 libpam-ldap libpam-ccreds

activate "$1"
